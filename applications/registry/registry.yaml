apiVersion: v1
kind: Namespace
metadata:
  name: registry
  labels:
    name: registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-dpl
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry-app
  template:
    metadata:
      labels:
        app: registry-app
    spec:
      containers:
        - name: registry
          image: registry:2
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: config-volume
              mountPath: /etc/docker/registry
            - name: htpasswd
              mountPath: /auth
          env:
            - name: REGISTRY_AUTH
              value: htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: /auth/.htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: Registry Realm
      volumes:
        - name: config-volume
          secret:
            secretName: registry-config-sec
        - name: htpasswd
          secret:
            secretName: registry-auth-secret
---
apiVersion: v1
kind: Service
metadata:
  namespace: registry
  name: registry-svc
spec:
  ports:
    - port: 80
      targetPort: 5000
      protocol: TCP
      name: http-port
  selector:
    app: registry-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: registry
  name: registry
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    acme.cert-manager.io/http01-edit-in-place: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - docker.registry.geekembly.com
      secretName: registry-tls-ingress
  rules:
    - host: docker.registry.geekembly.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: registry-svc
                port:
                  name: http-port
