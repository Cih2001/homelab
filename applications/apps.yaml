apiVersion: v1
kind: List
items:
  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: minio-dev
      namespace: argocd
    spec:
      destination:
        namespace: minio
        server: https://kubernetes.default.svc
      project: default
      source:
        path: applications/minio
        repoURL: https://github.com/Cih2001/homelab.git
      syncPolicy:
        automated:
          prune: true
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: sealed-secrets
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: https://charts.bitnami.com/bitnami
        chart: sealed-secrets
        targetRevision: 2.3.0
        helm:
          releaseName: sealed-secrets
          parameters:
            - name: fullnameOverride
              value: sealed-secrets-controller
      destination:
        server: https://kubernetes.default.svc
        namespace: kube-system
      syncPolicy:
        automated:
          prune: true
          selfHeal: true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: argo-workflows
      namespace: argocd
    spec:
      destination:
        namespace: argo
        server: https://kubernetes.default.svc
      project: default
      source:
        chart: argo-workflows
        repoURL: https://argoproj.github.io/argo-helm
        targetRevision: 0.41.8
        helm:
          releaseName: argo-workflows
          values: |
            server:
              ingress:
                enabled: true
                hosts:
                  - argo.geekembly.com
                ingressClassName: nginx
                annotations:
                  cert-manager.io/cluster-issuer: "letsencrypt-prod"
                  acme.cert-manager.io/http01-edit-in-place: "true"
                  nginx.ingress.kubernetes.io/ssl-redirect: "true"
                tls:
                  - hosts:
                      - argo.geekembly.com
                    secretName: argo.geekembly.com-tls
      syncPolicy:
        automated:
          prune: true
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: argo-events
      namespace: argocd
    spec:
      destination:
        namespace: argo-events
        server: https://kubernetes.default.svc
      project: default
      source:
        chart: argo-events
        repoURL: https://argoproj.github.io/argo-helm
        targetRevision: 2.4.6
        helm:
          releaseName: argo-events
      syncPolicy:
        automated:
          prune: true
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: registry
      namespace: argocd
    spec:
      destination:
        namespace: registry
        server: https://kubernetes.default.svc
      project: default
      source:
        path: applications/registry
        repoURL: https://github.com/Cih2001/homelab.git
      syncPolicy:
        automated:
          prune: true
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: kube-prometheus-stack
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: https://prometheus-community.github.io/helm-charts
        chart: kube-prometheus-stack
        targetRevision: 60.3.0
        helm:
          releaseName: kube-prometheus-stack
          values: |
            namespaceOverride: monitoring
            grafana:
              ingress:
                enabled: true
                ingressClassName: nginx
                annotations:
                  cert-manager.io/cluster-issuer: "letsencrypt-prod"
                  acme.cert-manager.io/http01-edit-in-place: "true"
                  nginx.ingress.kubernetes.io/ssl-redirect: "true"
                hosts:
                  - grafana.geekembly.com
                tls:
                  - hosts:
                      - grafana.geekembly.com
                    secretName: grafana.geekembly.com-tls
                path: /

      destination:
        namespace: monitoring
        server: https://kubernetes.default.svc
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: loki
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: https://grafana.github.io/helm-charts
        chart: loki
        targetRevision: 6.6.4
        helm:
          releaseName: loki
          values: |
            global:
              clusterDomain: homelab-k8s
              dnsService: coredns
            deploymentMode: SingleBinary
            loki:
              auth_enabled: false
              commonConfig:
                replication_factor: 1
              storage:
                bucketNames:
                  chunks: loki-chunks
                  ruler: loki-ruler
                  admin: loki-admin
                type: 's3'
                bucketNames:
                  chunks: loki-chunks
                  ruler: loki-ruler
                  admin: loki-admin
                s3:
                  endpoint: minio-svc.minio:9000
                  region: us-east-1
                  s3ForcePathStyle: true
                  insecure: true
              schemaConfig:
                configs:
                - from: "2024-01-01"
                  store: tsdb
                  index:
                    prefix: loki_index_
                    period: 24h
                  object_store: s3
                  schema: v13
            chunksCache:
              allocatedMemory: 1024
            singleBinary:
              replicas: 1
            read:
              replicas: 0
            backend:
              replicas: 0
            write:
              replicas: 0
      destination:
        namespace: monitoring
        server: https://kubernetes.default.svc
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: alloy
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: https://grafana.github.io/helm-charts
        chart: alloy
        targetRevision: 0.4.0
        helm:
          releaseName: alloy
          values: |
            alloy:
              configMap:
                content: |
                  loki.write "default" {
                    endpoint {
                      url       = "http://loki-gateway.monitoring/loki/api/v1/push"
                      tenant_id = "tenant1"
                    }
                    external_labels = {}
                  }

                  loki.source.kubernetes "homelab" {
                    targets          = discovery.kubernetes.pods.targets
                    forward_to       = [loki.write.default.receiver]
                  }

                  logging {
                    level  = "debug"
                    format = "logfmt"
                  }

                  discovery.kubernetes "pods" {
                    role = "pod"
                  }

                  discovery.kubernetes "nodes" {
                    role = "node"
                  }

                  discovery.kubernetes "services" {
                    role = "service"
                  }

                  discovery.kubernetes "endpoints" {
                    role = "endpoints"
                  }

                  discovery.kubernetes "endpointslices" {
                    role = "endpointslice"
                  }

                  discovery.kubernetes "ingresses" {
                    role = "ingress"
                  }
      destination:
        namespace: monitoring
        server: https://kubernetes.default.svc
      syncPolicy:
        automated:
          prune: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
